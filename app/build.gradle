apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        // Package name format: com.[your_name].iconpack.[name_of_your_icon_pack]
        /*AutoPackageName Start*/applicationId "com.e123.gxicon"/*AutoPackageName End*/
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        /*AutoVersionCode Start*/versionCode 17082301/*AutoVersionCode End*/
        /*AutoVersionName Start*/versionName "2017.8.23.1.nightly"/*AutoVersionName End*/

        resConfigs "en", "zh_cn"
    }

    buildTypes {
        signingConfigs {
            releaseConfig {
                storeFile file("../weng.jks")
                storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
                keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
                keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
            }
        }
        release {
            shrinkResources false // Keep false, or icons in /drawable-nodpi/ will become black.
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // For formatting apk file name, like com.by_syk.template_v1.0.0(17012500).apk
            android.applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null) {
                        def fileName = "gxIconDIY.apk"
                        output.outputFile = new File((String) outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }
}

/*repositories {
    flatDir { dirs 'libs' }
}*/

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'

    compile project(':nanoiconpack')
}